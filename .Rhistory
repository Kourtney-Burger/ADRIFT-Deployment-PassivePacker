'number' = '2',
'id' = as.character(calInfo$SerialNumber_2[i]),
'name' = calInfo$HydrophoneType_2[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-105',
'value_1' = as.character(calInfo$SerialNumber_2[i]),
'value_2' = '',
'description' = ''
),
'2' = list(
'type' = 'Depth Sensor',
'number' = '3',
'id' = deployDetails$Depth_Sensor[i],
'name' = deployDetails$DepthSensorType[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-100',
'value_1' = '',
'value_2' = '',
'description' = ''
),
'3' = list(
'type' = 'Other Sensor',
'number' = '4',
'id' = deployDetails$GPS_ID[i],
'name' = deployDetails$GPS_Tracker[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '+1',
'value_1' = 'GPS',
'value_2' = '',
'description' = '2 SPOT sattelite GPS sensors'
)
)
dd$SENSORS[i] <- toJSON(newSenList)
}
senList <- fromJSON(senText)
cat(toJSON(newSenList))
cat(toJSON(senList))
# Comment once working
#view(newSenList)
#View(senList)
identical(newSenList,senList)
for(i in 1:nrow(dd)) {
#  for (i in 1) {
newDdList <- list(
'DEPLOY_TYPE' = 'Mobile Marine',
'SEA_AREA' = 'North Pacific Ocean',
'DEPLOY_SHIP' = deployDetails$Deploy_Vessel[i],
'FILES' = paste('Z:/METADATA/CCES_2018/',deployDetails$Data_ID[i],'/',deployDetails$Data_ID[i],'_GPS/',deployDetails$Data_ID[i],'_GPS.csv', sep = ""),
'POSITION_DETAILS' = 'Satellite gps'
)
dd$DEPLOYMENT_DETAILS[i] <- toJSON(newDdList)
}
# Copy text from database
ddText <- '{"DEPLOY_TYPE": "Mobile Marine","SEA_AREA": "North Pacific Ocean","DEPLOY_SHIP": "R/V Ruben Lasker","FILES":"Z:/METADATA/CCES_2018/CCES_023/CCES_023_GPS/CCES_023_GPS.csv","POSITION_DETAILS": "Satellite gps"}'
ddList <- fromJSON(ddText)
cat(toJSON(newDdList))
cat(toJSON(ddList))
# Comment once working
#view(newDdList)
#View(ddList)
identical(newDdList,ddList)
for(i in 1:nrow(dd)) {
newCalList <- list(
'CAL_STATE' = 'Factory Calibrated',
'CAL_DOCS_PATH' = 'C:/Users/kourtney.burger/Documents/GitHub/ADRIFT-Deployment-PassivePacker/Calibration info',
'SENSITIVITY' = '',
'FREQUENCY' = '',
'GAIN' = '',
'COMMENT' = 'This dataset is composed of multichannel recorders with different types of hydrophones, each with its own unique sensitivity and frequency range. For the detailed calibration information refer to the CCES2018_CalibrationInfo.csv spreadsheet.'
)
dd$CALIBRATION_INFO[i] <- toJSON(newCalList)
}
# Copy text from database
calText <- '{"CAL_STATE": "Factory Calibrated", "CAL_DOCS_PATH": "C:/Users/kourtney.burger/Documents/GitHub/ADRIFT-Deployment-PassivePacker/Calibration info", "SENSITIVITY": "", "FREQUENCY": "", "GAIN": "", "COMMENT": "This dataset is composed of multichannel recorders with different types of hydrophones, each with its own unique sensitivity and frequency range. For the detailed calibration information refer to the CCES2018_CalibrationInfo.csv spreadsheet."}'
calList <- fromJSON(calText)
cat(toJSON(newCalList))
cat(toJSON(calList))
# comment once working
#view(newCalList)
#View(calList)
identical(newCalList,calList)
for(i in 1:nrow(dd)) {
#  for (i in 1) {
newDiList <- list(
'TYPE' = 'Raw',
'SUB_TYPE' = 'Audio',
'PLATFORM' = 'Drifter',
'INSTRUMENT_TYPE' = deployDetails$Type[i],
'INSTRUMENT_ID' = deployDetails$Instrument_ID[i],
'DEPLOYMENT_TIME' = posixToText(deployDetails$Deployment_Date[i]),
'RECOVERY_TIME' = posixToText(deployDetails$Recovery_Date[i]),
'AUDIO_START' = posixToText(deployDetails$Data_Start[i]),
'AUDIO_END' = posixToText(deployDetails$Data_End[i]),
'SOURCE_PATH' =  paste('F:/CCES_RawData/manipulated/audio/',deployDetails$Data_ID[i], sep = ""),
'DATA_COMMENT' = deployDetails$Notes[i]
)
dd$DATASET_INFO[i] <- toJSON(newDiList)
}
# Copy text from database
# Copy text from database
diText <- '{"TYPE": "Raw","SUB_TYPE": "Audio","PLATFORM": "Drifter","INSTRUMENT_TYPE": "SoundTrap 4300 HF","INSTRUMENT_ID": "1208791071","DEPLOYMENT_TIME": "2018-11-22T08:10:00","RECOVERY_TIME": "2018-12-03T00:25:00","AUDIO_START": "2018-11-22T08:28:24","AUDIO_END": "2018-12-03T00:49:11","SOURCE_PATH":"","DATA_COMMENT": "no depth data, Low frequency strumming and knocking under 50 Hz, ship noise under 250 Hz"}'
diList <- fromJSON(diText)
cat(toJSON(newDiList))
cat(toJSON(diList))
# comment once working
#view(newDiList)
#View(diList) #comment once running full loop
identical(newDiList,diList)
for(i in 1:nrow(dd)) {
newAncilList <- list(
'BIO_PATH' = "",
'OTHER_PATH' = paste('F:/CCES_RawData/manipulated/metadata/', deployDetails$Data_ID[i], sep = ""),
'TEMP_PATH' = paste('F:/CCES_RawData/manipulated/temp/', deployDetails$Data_ID[i], sep = "")
)
dd$ANCILLARY_INFO[i] <- toJSON(newAncilList)
}
ancilText <- '{"BIO_PATH":"","OTHER_PATH":"F:/CCES_RawData/manipulated/metadata/CCES_023","TEMP_PATH":"F:/CCES_RawData/manipulated/temp/CCES_023"}'
ancilList <- fromJSON(ancilText)
cat(toJSON(newAncilList))
cat(toJSON(ancilList))
# comment once working
#view(newAncilList)
#View(ancilList) #comment once running full loop
identical(newAncilList,ancilList)
View(deployDetails)
for(i in 1:nrow(dd)) {
#  for(i in 1) {
newQdList <- list(
'analyst' = 'Cory Hom-Weaver',
'analyst_uuid' = '8f9f3e13-3571-436d-b1fd-6e779acd9a9f',
'quality_details' = list(
list(
'quality' = deployDetails$Quality_Category[i],
'low_freq' = deployDetails$Quality_LowFreq[i],
'high_freq' = deployDetails$Quality_HighFreq[i],# Fix for kHz high quality
'start' = posixToText(deployDetails$Data_Start[i]),
'end' = posixToText(deployDetails$Data_End[i]),
'comments' = paste('Refer to ', deployDetails$Data_ID[i], '_500Hz_LF_Noise_Log.xls' , ' for detailed noise logs.', sep = ""),
'channels' = list(
1)
)
),
'method' = '',
'objectives' = '',
'abstract' = ''
)
# save newQdList to r list
dd$QUALITY_DETAILS[i] <- toJSON(newQdList)
}
qdText <- '{"analyst": "Cory Hom-Weaver", "analyst_uuid": "8f9f3e13-3571-436d-b1fd-6e779acd9a9f", "quality_details": [{"quality": "Good", "low_freq": "20", "high_freq": "576000", "start": "2018-11-22T08:28:24", "end": "2018-12-03T00:49:11", "comments": "Refer to CCES_023_500Hz_LF_Noise_Log.xls for detailed noise logs.", "channels": [1]}], "method": "", "objectives": "", "abstract": ""}'
qdList <- fromJSON(qdText)
cat(toJSON(newQdList))
cat(toJSON(qdList))
# Comment once working
#view(newQdList)
#View(qdList)
identical(newQdList,qdList)
# This will be the same for each drift within a project
# PASCAL - Shannon Rankin & Jennifer McCullough
# CCES - Shannon Rankin and Anne Simonis
# ADRIFT - Shannon Rankin & Chief sci from deployment details
# Copy text from database
sciText <- '[{"name": "Anne Simonis", "uuid": "3e9e1d2e-0fed-45d0-bc21-c388d4ea933a"}, {"name": "Shannon Rankin", "uuid": "c6a8953f-616b-4de1-99ce-3dd70e631dd5"}]'
for (i in 1:nrow(dd)) {
newSciList <- list(
list(
'name' = 'Anne Simonis',
'uuid' = '3e9e1d2e-0fed-45d0-bc21-c388d4ea933a'
),
list(
'name' = 'Shannon Rankin',
'uuid' = 'c6a8953f-616b-4de1-99ce-3dd70e631dd5'
)
)
dd$SCIENTISTS[i] <- toJSON(newSciList)
}
sciList <- fromJSON(sciText)
cat(toJSON(newSciList))
cat(toJSON(sciList))
# Comment once working
#view(newSciList)
#View(sciList)
identical(newSciList,sciList)
# This will always be NOAA SWFSC
# Copy text from database
sponText <- '[{"name": "NOAA SWFSC", "uuid": "918a8687-8b33-4f70-b550-79a5273866fa"}]'
for (i in 1:nrow(dd)) {
newSponList <- list(
list(
'name' = 'NOAA SWFSC',
'uuid' = '918a8687-8b33-4f70-b550-79a5273866fa'
)
)
dd$SPONSORS[i] <- toJSON(newSponList)
}
sponList <- fromJSON(sponText)
cat(toJSON(newSponList))
cat(toJSON(sponList))
# Comment once working
#view(newSponList)
#View(sponList)
identical(newSponList,sponList)
# This will always be NOAA SWFSC
# Copy text from database
funText <- '[{"name": "NOAA SWFSC", "uuid": "918a8687-8b33-4f70-b550-79a5273866fa"}, {"name": "BOEM", "uuid": "fee4d17a-a7dd-4f13-ade5-817b4f1fc86d"}, {"name": "US Navy Pacific Fleet Environmental Readiness Division", "uuid": "d246d0dc-b74b-4dc3-8d27-bdbb28b3e009"}]'
for (i in 1:nrow(dd)) {
newFunList <- list(
list(
'name' = 'NOAA SWFSC',
'uuid' = '918a8687-8b33-4f70-b550-79a5273866fa'
),
list(
'name' = 'BOEM',
'uuid' = 'fee4d17a-a7dd-4f13-ade5-817b4f1fc86d'
),
list(
'name' = 'US Navy Pacific Fleet Environmental Readiness Division',
'uuid' = 'd246d0dc-b74b-4dc3-8d27-bdbb28b3e009'
)
)
dd$FUNDERS[i] <- toJSON(newFunList)
}
funList <- fromJSON(funText)
cat(toJSON(newFunList))
cat(toJSON(funList))
# Comment once working
#view(newFunList)
#View(funList)
identical(newFunList,funList)
# A lot of this data has to come from the calibration sheet
# For CCES, all calibration info is in 'CCES2018_CalibrationInfo.csv'
# For PASCAL, make spreadsheet from report
# For ADRIFT, use inventory spreadsheets
# read in data from calibration info spreadsheet
calInfo <- read.csv("Calibration Files/CCES2018_CalibrationInfo.csv")
# Copy text from database
senText <- '{"0": {"type": "Audio Sensor", "number": "1", "id": "856048", "name": "HTI-92-WB", "pos_x": "", "pos_y": "", "pos_z": "-100", "value_1": "856048", "value_2": "", "description": ""}, "1": {"type": "Audio Sensor", "number": "2", "id": "856059", "name": "HTI-96-min", "pos_x": "", "pos_y": "", "pos_z": "-105", "value_1": "856059", "value_2": "", "description": ""}, "2": {"type": "Depth Sensor", "number": "3", "id": "NA", "name": "", "pos_x": "", "pos_y": "", "pos_z": "-100", "value_1": "", "value_2": "", "description": ""}, "3": {"type": "Other Sensor", "number": "4", "id": "A/B", "name": "SPOT", "pos_x": "", "pos_y": "", "pos_z": "+1", "value_1": "GPS", "value_2": "", "description": "2 SPOT sattelite GPS sensors"}}'
for(i in 1:nrow(dd)) {
#  for (i in 1) {
newSenList <- list(
'0' = list(
'type' = 'Audio Sensor',
'number' = '1',
'id' = as.character(calInfo$SerialNumber_1[i]),
'name' = calInfo$HydrophoneType_1[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-100',
'value_1' = as.character(calInfo$SerialNumber_1[i]),
'value_2' = '',
'description' = ''
),
'1' = list(
'type' = 'Audio Sensor',
'number' = '2',
'id' = as.character(calInfo$SerialNumber_2[i]),
'name' = calInfo$HydrophoneType_2[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-105',
'value_1' = as.character(calInfo$SerialNumber_2[i]),
'value_2' = '',
'description' = ''
),
'2' = list(
'type' = 'Depth Sensor',
'number' = '3',
'id' = deployDetails$Depth_Sensor[i],
'name' = deployDetails$DepthSensorType[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-100',
'value_1' = '',
'value_2' = '',
'description' = ''
),
'3' = list(
'type' = 'Other Sensor',
'number' = '4',
'id' = deployDetails$GPS_ID[i],
'name' = deployDetails$GPS_Tracker[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '+1',
'value_1' = 'GPS',
'value_2' = '',
'description' = '2 SPOT sattelite GPS sensors'
)
)
dd$SENSORS[i] <- toJSON(newSenList)
}
senList <- fromJSON(senText)
cat(toJSON(newSenList))
cat(toJSON(senList))
# Comment once working
#view(newSenList)
#View(senList)
identical(newSenList,senList)
# A lot of this data has to come from the calibration sheet
# For CCES, all calibration info is in 'CCES2018_CalibrationInfo.csv'
# For PASCAL, make spreadsheet from report
# For ADRIFT, use inventory spreadsheets
# read in data from calibration info spreadsheet
calInfo <- read.csv("Calibration Files/CCES2018_CalibrationInfo.csv")
# Copy text from database
senText <- '{"0": {"type": "Audio Sensor", "number": "1", "id": "856048", "name": "HTI-92-WB", "pos_x": "", "pos_y": "", "pos_z": "-100", "value_1": "856048", "value_2": "", "description": ""}, "1": {"type": "Audio Sensor", "number": "2", "id": "856059", "name": "HTI-96-min", "pos_x": "", "pos_y": "", "pos_z": "-105", "value_1": "856059", "value_2": "", "description": ""}, "2": {"type": "Depth Sensor", "number": "3", "id": "NA", "name": "NA", "pos_x": "", "pos_y": "", "pos_z": "-100", "value_1": "", "value_2": "", "description": ""}, "3": {"type": "Other Sensor", "number": "4", "id": "A/B", "name": "SPOT", "pos_x": "", "pos_y": "", "pos_z": "+1", "value_1": "GPS", "value_2": "", "description": "2 SPOT sattelite GPS sensors"}}'
for(i in 1:nrow(dd)) {
#  for (i in 1) {
newSenList <- list(
'0' = list(
'type' = 'Audio Sensor',
'number' = '1',
'id' = as.character(calInfo$SerialNumber_1[i]),
'name' = calInfo$HydrophoneType_1[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-100',
'value_1' = as.character(calInfo$SerialNumber_1[i]),
'value_2' = '',
'description' = ''
),
'1' = list(
'type' = 'Audio Sensor',
'number' = '2',
'id' = as.character(calInfo$SerialNumber_2[i]),
'name' = calInfo$HydrophoneType_2[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-105',
'value_1' = as.character(calInfo$SerialNumber_2[i]),
'value_2' = '',
'description' = ''
),
'2' = list(
'type' = 'Depth Sensor',
'number' = '3',
'id' = deployDetails$Depth_Sensor[i],
'name' = deployDetails$DepthSensorType[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-100',
'value_1' = '',
'value_2' = '',
'description' = ''
),
'3' = list(
'type' = 'Other Sensor',
'number' = '4',
'id' = deployDetails$GPS_ID[i],
'name' = deployDetails$GPS_Tracker[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '+1',
'value_1' = 'GPS',
'value_2' = '',
'description' = '2 SPOT sattelite GPS sensors'
)
)
dd$SENSORS[i] <- toJSON(newSenList)
}
senList <- fromJSON(senText)
cat(toJSON(newSenList))
cat(toJSON(senList))
# Comment once working
#view(newSenList)
#View(senList)
identical(newSenList,senList)
for(i in 1:nrow(dd)) {
#  for (i in 1) {
newDdList <- list(
'DEPLOY_TYPE' = 'Mobile Marine',
'SEA_AREA' = 'North Pacific Ocean',
'DEPLOY_SHIP' = deployDetails$Deploy_Vessel[i],
'FILES' = paste('Z:/METADATA/CCES_2018/',deployDetails$Data_ID[i],'/',deployDetails$Data_ID[i],'_GPS/',deployDetails$Data_ID[i],'_GPS.csv', sep = ""),
'POSITION_DETAILS' = 'Satellite gps'
)
dd$DEPLOYMENT_DETAILS[i] <- toJSON(newDdList)
}
# Copy text from database
ddText <- '{"DEPLOY_TYPE": "Mobile Marine","SEA_AREA": "North Pacific Ocean","DEPLOY_SHIP": "R/V Ruben Lasker","FILES":"Z:/METADATA/CCES_2018/CCES_023/CCES_023_GPS/CCES_023_GPS.csv","POSITION_DETAILS": "Satellite gps"}'
ddList <- fromJSON(ddText)
cat(toJSON(newDdList))
cat(toJSON(ddList))
# Comment once working
#view(newDdList)
#View(ddList)
identical(newDdList,ddList)
for(i in 1:nrow(dd)) {
newCalList <- list(
'CAL_STATE' = 'Factory Calibrated',
'CAL_DOCS_PATH' = 'C:/Users/kourtney.burger/Documents/GitHub/ADRIFT-Deployment-PassivePacker/Calibration info',
'SENSITIVITY' = '',
'FREQUENCY' = '',
'GAIN' = '',
'COMMENT' = 'This dataset is composed of multichannel recorders with different types of hydrophones, each with its own unique sensitivity and frequency range. For the detailed calibration information refer to the CCES2018_CalibrationInfo.csv spreadsheet.'
)
dd$CALIBRATION_INFO[i] <- toJSON(newCalList)
}
# Copy text from database
calText <- '{"CAL_STATE": "Factory Calibrated", "CAL_DOCS_PATH": "C:/Users/kourtney.burger/Documents/GitHub/ADRIFT-Deployment-PassivePacker/Calibration info", "SENSITIVITY": "", "FREQUENCY": "", "GAIN": "", "COMMENT": "This dataset is composed of multichannel recorders with different types of hydrophones, each with its own unique sensitivity and frequency range. For the detailed calibration information refer to the CCES2018_CalibrationInfo.csv spreadsheet."}'
calList <- fromJSON(calText)
cat(toJSON(newCalList))
cat(toJSON(calList))
# comment once working
#view(newCalList)
#View(calList)
identical(newCalList,calList)
for(i in 1:nrow(dd)) {
#  for (i in 1) {
newDiList <- list(
'TYPE' = 'Raw',
'SUB_TYPE' = 'Audio',
'PLATFORM' = 'Drifter',
'INSTRUMENT_TYPE' = deployDetails$Type[i],
'INSTRUMENT_ID' = deployDetails$Instrument_ID[i],
'DEPLOYMENT_TIME' = posixToText(deployDetails$Deployment_Date[i]),
'RECOVERY_TIME' = posixToText(deployDetails$Recovery_Date[i]),
'AUDIO_START' = posixToText(deployDetails$Data_Start[i]),
'AUDIO_END' = posixToText(deployDetails$Data_End[i]),
'SOURCE_PATH' =  paste('F:/CCES_RawData/manipulated/audio/',deployDetails$Data_ID[i], sep = ""),
'DATA_COMMENT' = deployDetails$Notes[i]
)
dd$DATASET_INFO[i] <- toJSON(newDiList)
}
# Copy text from database
# Copy text from database
diText <- '{"TYPE": "Raw","SUB_TYPE": "Audio","PLATFORM": "Drifter","INSTRUMENT_TYPE": "SoundTrap 4300 HF","INSTRUMENT_ID": "1208791071","DEPLOYMENT_TIME": "2018-11-22T08:10:00","RECOVERY_TIME": "2018-12-03T00:25:00","AUDIO_START": "2018-11-22T08:28:24","AUDIO_END": "2018-12-03T00:49:11","SOURCE_PATH":"","DATA_COMMENT": "no depth data, Low frequency strumming and knocking under 50 Hz, ship noise under 250 Hz"}'
diList <- fromJSON(diText)
cat(toJSON(newDiList))
cat(toJSON(diList))
# comment once working
#view(newDiList)
#View(diList) #comment once running full loop
identical(newDiList,diList)
for(i in 1:nrow(dd)) {
#  for (i in 1) {
newDiList <- list(
'TYPE' = 'Raw',
'SUB_TYPE' = 'Audio',
'PLATFORM' = 'Drifter',
'INSTRUMENT_TYPE' = deployDetails$Type[i],
'INSTRUMENT_ID' = deployDetails$Instrument_ID[i],
'DEPLOYMENT_TIME' = posixToText(deployDetails$Deployment_Date[i]),
'RECOVERY_TIME' = posixToText(deployDetails$Recovery_Date[i]),
'AUDIO_START' = posixToText(deployDetails$Data_Start[i]),
'AUDIO_END' = posixToText(deployDetails$Data_End[i]),
'SOURCE_PATH' =  paste('F:/CCES_RawData/manipulated/audio/',deployDetails$Data_ID[i], sep = ""),
'DATA_COMMENT' = deployDetails$Notes[i]
)
dd$DATASET_INFO[i] <- toJSON(newDiList)
}
# Copy text from database
# Copy text from database
diText <- '{"TYPE": "Raw","SUB_TYPE": "Audio","PLATFORM": "Drifter","INSTRUMENT_TYPE": "SoundTrap 4300 HF","INSTRUMENT_ID": "1208791071","DEPLOYMENT_TIME": "2018-11-22T08:10:00","RECOVERY_TIME": "2018-12-03T00:25:00","AUDIO_START": "2018-11-22T08:28:24","AUDIO_END": "2018-12-03T00:49:11","SOURCE_PATH":"F:/CCES_RawData/manipulated/audio/CCES_023","DATA_COMMENT": "no depth data, Low frequency strumming and knocking under 50 Hz, ship noise under 250 Hz"}'
diList <- fromJSON(diText)
cat(toJSON(newDiList))
cat(toJSON(diList))
# comment once working
#view(newDiList)
#View(diList) #comment once running full loop
identical(newDiList,diList)
for(i in 1:nrow(dd)) {
newAncilList <- list(
'BIO_PATH' = "",
'OTHER_PATH' = paste('F:/CCES_RawData/manipulated/metadata/', deployDetails$Data_ID[i], sep = ""),
'TEMP_PATH' = paste('F:/CCES_RawData/manipulated/temp/', deployDetails$Data_ID[i], sep = "")
)
dd$ANCILLARY_INFO[i] <- toJSON(newAncilList)
}
ancilText <- '{"BIO_PATH":"","OTHER_PATH":"F:/CCES_RawData/manipulated/metadata/CCES_023","TEMP_PATH":"F:/CCES_RawData/manipulated/temp/CCES_023"}'
ancilList <- fromJSON(ancilText)
cat(toJSON(newAncilList))
cat(toJSON(ancilList))
# comment once working
#view(newAncilList)
#View(ancilList) #comment once running full loop
identical(newAncilList,ancilList)
con <- dbConnect(SQLite(), "PassivePacker_v.4.0.3-win64/database/packageData.sqlite")
dbAppendTable(con, 'DEPLOYMENT_DATA', dd)
dbDisconnect(con)
list.files('~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files')
currentCal <- list.files('~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files')
# Create folder/directory to move the list above to
dir.create(file.path(paste('F:/CCES_RawData/manipulated/metadata/',
deployDetails$Data_ID[3], '/calibration', sep = "")))
newCal <- file.path(paste('F:/CCES_RawData/manipulated/metadata/',
deployDetails$Data_ID[3], '/calibration', sep = ""))
# Copy list of files to new directory
file.copy(currentCal, newCal)
dir.create(file.path(paste('F:/CCES_RawData/manipulated/metadata/',
deployDetails$Data_ID[3], sep = "")))
currentCal <- list.files('~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files')
# Create folder/directory to move the list above to
dir.create(file.path(paste('F:/CCES_RawData/manipulated/metadata/',
deployDetails$Data_ID[3], '/calibration', sep = "")))
newCal <- file.path(paste('F:/CCES_RawData/manipulated/metadata/',
deployDetails$Data_ID[3], '/calibration', sep = ""))
# Copy list of files to new directory
file.copy(currentCal, newCal)
#Calibration File
# List of files I want to move
currentCal <- list.files('~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files', full.names = T)
# Create folder/directory to move the list above to
dir.create(file.path(paste('F:/CCES_RawData/manipulated/metadata/',
deployDetails$Data_ID[3], '/calibration', sep = "")))
newCal <- file.path(paste('F:/CCES_RawData/manipulated/metadata/',
deployDetails$Data_ID[3], '/calibration', sep = ""))
# Copy list of files to new directory
file.copy(currentCal, newCal)

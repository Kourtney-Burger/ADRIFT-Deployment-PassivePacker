deployDetails[deployDetails == "COL"] <- "Columbia River"
deployDetails[deployDetails == "ORE"] <- "Oregon"
deployDetails[deployDetails == "HUM"] <- "Humboldt"
deployDetails[deployDetails == "MND"] <- "Mendocino"
deployDetails[deployDetails == "PTA"] <- "Point Arena"
deployDetails[deployDetails == "SFB"] <- "San Francisco Bay"
deployDetails[deployDetails == "HMB"] <- "Half Moon Bay"
deployDetails[deployDetails == "MBY"] <- "Monterey Bay"
deployDetails[deployDetails == "MOB"] <- "Morro Bay"
deployDetails[deployDetails == "CHI"] <- "Channel Islands"
deployDetails[deployDetails == "LAB"] <- "Los Angeles Basin"
deployDetails[deployDetails == "SND"] <- "San Diego"
deployDetails[deployDetails == "BCN"] <- "Baja California Norte"
deployDetails[deployDetails == "BCS"] <- "Baja California Sur"
# Fix date formats
# `format =` argument -> format needs to match the way the data is currently stored (should be %m/%d/%Y %H:%M:%S)
names(deployDetails)[37] <- "Data_Start"
names(deployDetails)[38] <- "Data_End"
deployDetails$Data_Start <- as.POSIXct(deployDetails$Data_Start, format = "%m/%d/%Y %H:%M:%S", tz = 'UTC')
deployDetails$Data_End <- as.POSIXct(deployDetails$Data_End, format = "%m/%d/%Y %H:%M:%S", tz = 'UTC')
deployDetails$Deployment_Date_UTC <- as.POSIXct(deployDetails$Deployment_Date_UTC, format = "%m/%d/%Y %H:%M", tz = 'UTC')
deployDetails$Recovery_Date_UTC <- as.POSIXct(deployDetails$Recovery_Date_UTC, format = "%m/%d/%Y %H:%M", tz = 'UTC')
deployDetails$Date..UTC <- as.Date(deployDetails$Date..UTC, "%m/%d/%Y")
#Create chief sci column
deployDetails <- deployDetails %>%
separate(Personnel, c("ChiefSci", "AdditionalPersonnel"), sep = ",", extra = "merge")
# Reorder drifts
deployDetails <- deployDetails %>% arrange(DeploymentID)
# Make all data characters
deployDetails <- deployDetails %>%
mutate(across(where(is.numeric), as.character))
db <- dbConnect(SQLite(), here("PassivePacker_v.4.0.3-win64", "database", "packageData.sqlite"))
ppdt <- dbReadTable(db, "DEPLOYMENT_DATA")
dbDisconnect(db)
# Subset data
dd <- subset(deployDetails, select = c('Project', 'DeploymentID', 'Cruise'))
# Add required columns
# Change METADATA_AUTHOR and METADATA_AUTHOR_UUID to whoever is packaging data
# Change TITLE to full project name
dd <- dd %>%
add_column(ID = NA, SITE_CRUISE = NA, PACKAGE_ID = NA, SOURCE_PATH = NA,
DESTINATION_PATH = NA, METADATA_AUTHOR = 'Kourtney Burger',
META_AUTHOR_UUID = '2a603700-144e-442c-bbb5-27c40363819a',
PUBLICATION_DATE = NA, PLATFORM = NA, INSTRUMENT_TYPE = NA,
INSTRUMENT_ID = NA, DEPLOYMENT_ALIAS = NA, SITE_ALIAS = NA,
DEPLOY_TIME = NA, AUDIO_START_TIME = NA, RECOVER_TIME =NA,
AUDIO_END_TIME = NA, TITLE = "ADRIFT In the California Current",
PURPOSE = NA, ABSTRACT = NA, DATA_COMMENT = NA, TEMP_PATH = NA,
BIO_PATH = NA, OTHER_PATH = NA, DOCS_PATH = NA, CALIBRATION_PATH = NA,
CREATION_TIME = NA, UPDATE_TIME = NA, USE = 'Y', SAMPLING_DETAILS = NA,
QUALITY_DETAILS = NA, SCIENTISTS = NA, SPONSORS = NA, FUNDERS = NA,
SENSORS = NA, DEPLOYMENT_DETAILS = NA, CALIBRATION_INFO = NA,
DATASET_INFO = NA, ANCILLARY_INFO = NA)
# Reorder and rename columns
dd <- dd[, c(4,1,2,5,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,
26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42)]
names(dd)[2] <- "PROJECT"
names(dd)[3] <- "DEPLOYMENT_ID"
names(dd)[5] <- "SITE_OR_CRUISE"
# Add ID Number (Primary Key)
# If no existing data, maxID is 0
oldMax <- ifelse(nrow(ppdt) == 0, 0, max(ppdt$ID))
dd$ID <- (1:nrow(dd)) + oldMax
# Fix project and package_id fields
#(combine columns and remove spaces)
dd$PROJECT <- paste('SWFSC-',dd$PROJECT)
dd$PACKAGE_ID <- paste(dd$PROJECT,'_',dd$DEPLOYMENT_ID)
dd$PROJECT <- paste('["',dd$PROJECT,'"]')
dd$PROJECT <- gsub(" ","",dd$PROJECT)
dd$PACKAGE_ID <- gsub(" ","",dd$PACKAGE_ID)
# Add Publication Date
for (i in 1:nrow(deployDetails)) {
deployDate <- deployDetails$Date..UTC[i]
pubDate <- deployDate %m+% years(2)
pubDate <- as.character(pubDate)
dd$PUBLICATION_DATE[i] <- pubDate
}
# Add site alias
for (i in 1:nrow(deployDetails)) {
dd$SITE_ALIAS[i] <- deployDetails$Site[i]
}
# Dataset Description
dd$PURPOSE <- 'ADRIFT in the California Current uses passive acoustic drifting buoys to study ocean sound in the California Current Ecosystem. The relatively low-cost buoys can be deployed and recovered from most vessels, including: research, fishing, and tourist boats. They drift autonomously and can be monitored shoreside via a satellite messenger. Data collected through the ADRIFT project will be used to assess noise levels and seasonal marine mammal acoustic presence in the California Current.'
dd$ABSTRACT <- ''
# Set package destination (change to appropriate file path)
dd$DESTINATION_PATH <- 'G:/Packaged Drifts'
# A lot of this data has to come from the calibration sheet
# For CCES, all calibration info is in 'CCES2018_CalibrationInfo.csv'
# For PASCAL, make spreadsheet from report
# For ADRIFT, all calibration info was pulled from the inventory and is in 'ADRIFT_CalibrationInfo.csv'
# read in data from calibration info spreadsheet
calInfo <- read.csv("~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files/Inventory - Hydrophones.csv")
for(i in 1:nrow(dd)) {
#  for (i in 64) {
newSenList <- list(
'0' = list(
'type' = 'Audio Sensor',
'number' = '1',
'id' = as.character(deployDetails$SensorNumber_1..hydrophone.serial.number.[i]),
'name' = calInfo$Model[calInfo$Serial.Number == deployDetails$SensorNumber_1..hydrophone.serial.number.[i]],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-100',
'value_1' = as.character(deployDetails$SensorNumber_1..hydrophone.serial.number.[i]),
'value_2' = '',
'description' = ''
),
'1' = list(
'type' = 'Audio Sensor',
'number' = '2',
'id' = as.character(deployDetails$SensorNumber_2...hydrophone.serial.number.[i]),
'name' = calInfo$Model[calInfo$Serial.Number == deployDetails$SensorNumber_2...hydrophone.serial.number.[i]],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-105',
'value_1' = as.character(deployDetails$SensorNumber_2...hydrophone.serial.number.[i]),
'value_2' = '',
'description' = ''
),
'2' = list(
'type' = 'Depth Sensor',
'number' = '3',
'id' = deployDetails$Depth.Sensor..serial.number.[i],
'name' = 'Sensus Ultra',
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-100',
'value_1' = '',
'value_2' = '',
'description' = ''
),
'3' = list(
'type' = 'Other Sensor',
'number' = '4',
'id' = deployDetails$GPS.ID..if.appropriate...top...bottom.[i],
'name' = deployDetails$GPS.Tracker[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '+1',
'value_1' = 'GPS',
'value_2' = '',
'description' = ''
)
)
dd$SENSORS[i] <- toJSON(newSenList)
}
# Comment once working
# Copy text from database
# senText <- '{"0": {"type": "Audio Sensor", "number": "1", "id": "856155", "name": "HTI-92-WB", "pos_x": "", "pos_y": "", "pos_z": "-100", "value_1": "856155", "value_2": "", "description": ""}, "1": {"type": "Audio Sensor", "number": "2", "id": "856166", "name": "HTI-99-HF", "pos_x": "", "pos_y": "", "pos_z": "-105", "value_1": "856166", "value_2": "", "description": ""}, "2": {"type": "Depth Sensor", "number": "3", "id": "16396", "name": "Sensus Ultra", "pos_x": "", "pos_y": "", "pos_z": "-100", "value_1": "", "value_2": "", "description": ""}, "3": {"type": "Other Sensor", "number": "4", "id": "SO-001", "name": "Solar", "pos_x": "", "pos_y": "", "pos_z": "+1", "value_1": "GPS", "value_2": "", "description": ""}}'
# senList <- fromJSON(senText)
# cat(toJSON(newSenList))
# cat(toJSON(senList))
# view(newSenList)
# View(senList)
# identical(newSenList,senList)
con <- dbConnect(SQLite(), here("PassivePacker_v.4.0.3-win64", "database", "packageData.sqlite"))
dbAppendTable(con, 'DEPLOYMENT_DATA', dd)
dbDisconnect(con)
i=1
calInfo$Model[calInfo$Serial.Number == deployDetails$SensorNumber_1..hydrophone.serial.number.[i]]
deployDetails$SensorNumber_1..hydrophone.serial.number.[i]]
deployDetails$SensorNumber_1..hydrophone.serial.number.[i]
calInfo$Serial.Number == deployDetails$SensorNumber_1..hydrophone.serial.number.[i]
deployDetails$SensorNumber_1..hydrophone.serial.number.[i]
calInfo$Model[calInfo$Serial.Number == 856135]
View(calInfo)
calInfo$Serial.Number[856135]
as.character(deployDetails$SensorNumber_1..hydrophone.serial.number.[i])
# read in data from calibration info spreadsheet
calInfo <- read.csv("~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files/ADRIFT_CalibrationInfo.csv")
calInfo$HydrophoneType_1[i]
# A lot of this data has to come from the calibration sheet
# For CCES, all calibration info is in 'CCES2018_CalibrationInfo.csv'
# For PASCAL, make spreadsheet from report
# For ADRIFT, all calibration info was pulled from the inventory and is in 'ADRIFT_CalibrationInfo.csv'
# read in data from calibration info spreadsheet
calInfo <- read.csv("~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files/ADRIFT_CalibrationInfo.csv")
for(i in 1:nrow(dd)) {
#  for (i in 64) {
newSenList <- list(
'0' = list(
'type' = 'Audio Sensor',
'number' = '1',
'id' = as.character(deployDetails$SensorNumber_1..hydrophone.serial.number.[i]),
'name' = calInfo$HydrophoneType_1[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-100',
'value_1' = as.character(deployDetails$SensorNumber_1..hydrophone.serial.number.[i]),
'value_2' = '',
'description' = ''
),
'1' = list(
'type' = 'Audio Sensor',
'number' = '2',
'id' = as.character(deployDetails$SensorNumber_2...hydrophone.serial.number.[i]),
'name' = calInfo$HydrophoneType_2[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-105',
'value_1' = as.character(deployDetails$SensorNumber_2...hydrophone.serial.number.[i]),
'value_2' = '',
'description' = ''
),
'2' = list(
'type' = 'Depth Sensor',
'number' = '3',
'id' = deployDetails$Depth.Sensor..serial.number.[i],
'name' = 'Sensus Ultra',
'pos_x' = '',
'pos_y' = '',
'pos_z' = '-100',
'value_1' = '',
'value_2' = '',
'description' = ''
),
'3' = list(
'type' = 'Other Sensor',
'number' = '4',
'id' = deployDetails$GPS.ID..if.appropriate...top...bottom.[i],
'name' = deployDetails$GPS.Tracker[i],
'pos_x' = '',
'pos_y' = '',
'pos_z' = '+1',
'value_1' = 'GPS',
'value_2' = '',
'description' = ''
)
)
dd$SENSORS[i] <- toJSON(newSenList)
}
# Comment once working
# Copy text from database
# senText <- '{"0": {"type": "Audio Sensor", "number": "1", "id": "856155", "name": "HTI-92-WB", "pos_x": "", "pos_y": "", "pos_z": "-100", "value_1": "856155", "value_2": "", "description": ""}, "1": {"type": "Audio Sensor", "number": "2", "id": "856166", "name": "HTI-99-HF", "pos_x": "", "pos_y": "", "pos_z": "-105", "value_1": "856166", "value_2": "", "description": ""}, "2": {"type": "Depth Sensor", "number": "3", "id": "16396", "name": "Sensus Ultra", "pos_x": "", "pos_y": "", "pos_z": "-100", "value_1": "", "value_2": "", "description": ""}, "3": {"type": "Other Sensor", "number": "4", "id": "SO-001", "name": "Solar", "pos_x": "", "pos_y": "", "pos_z": "+1", "value_1": "GPS", "value_2": "", "description": ""}}'
# senList <- fromJSON(senText)
# cat(toJSON(newSenList))
# cat(toJSON(senList))
# view(newSenList)
# View(senList)
# identical(newSenList,senList)
calInfo$HydrophoneType_1[i]
dd$SENSORS[20]
con <- dbConnect(SQLite(), here("PassivePacker_v.4.0.3-win64", "database", "packageData.sqlite"))
dbAppendTable(con, 'DEPLOYMENT_DATA', dd)
dbDisconnect(con)
paste('F:/CCES_RawData/manipulated/gps/',deployDetails$Data_ID[i],'/',deployDetails$Data_ID[i],'_GPS.csv',', ','F:/CCES_RawData/manipulated/gps/',deployDetails$Data_ID[i],'/',deployDetails$Data_ID[i],'_DeploymentDepth.csv',sep = "")
paste('F:/CCES_RawData/manipulated/gps/',deployDetails$Data_ID[i],'/',deployDetails$Data_ID[i],'_GPS.csv',',','F:/CCES_RawData/manipulated/gps/',deployDetails$Data_ID[i],'/',deployDetails$Data_ID[i],'_DeploymentDepth.csv',sep = "")
library(here)
library(DBI)
library(RSQLite)
library(tidyverse)
library(rjson)
library(dplyr)
library(stringr)
DepDir <- here('ADRIFT-Deployment-PassivePacker')
posixToText <- function(x) {
format(x, '%Y-%m-%dT%H:%M:%S')
}
posixToText(as.POSIXct("2018-11-22 08:28:24", tz='UTC'))
# Import Deployment Details
deployDetails <- read.csv("DeploymentDetailsFiles/CCES_DeploymentDetails.csv")
# Change soundtrap names
deployDetails[deployDetails == 'ST640'] <- 'SoundTrap 640'
deployDetails[deployDetails == "ST4300HF"] <- "SoundTrap 4300 High Frequency"
deployDetails[deployDetails == "ST300"] <- "SoundTrap 300"
deployDetails[deployDetails == "ST4300"] <- "SoundTrap 4300 Standard"
deployDetails[deployDetails == "ST500HF"] <- "SoundTrap 500 High Frequency"
deployDetails[deployDetails == "ST300HF"] <- "SoundTrap 300 High Frequency"
# Change Site Names
deployDetails[deployDetails == "WAS"] <- "Washington"
deployDetails[deployDetails == "COL"] <- "Columbia River"
deployDetails[deployDetails == "ORE"] <- "Oregon"
deployDetails[deployDetails == "HUM"] <- "Humboldt"
deployDetails[deployDetails == "MND"] <- "Mendocino"
deployDetails[deployDetails == "PTA"] <- "Point Arena"
deployDetails[deployDetails == "SFB"] <- "San Francisco Bay"
deployDetails[deployDetails == "HMB"] <- "Half Moon Bay"
deployDetails[deployDetails == "MBY"] <- "Monterey Bay"
deployDetails[deployDetails == "MOB"] <- "Morro Bay"
deployDetails[deployDetails == "CHI"] <- "Channel Islands"
deployDetails[deployDetails == "LAB"] <- "Los Angeles Basin"
deployDetails[deployDetails == "SND"] <- "San Diego"
deployDetails[deployDetails == "BCN"] <- "Baja California Norte"
deployDetails[deployDetails == "BCS"] <- "Baja California Sur"
# ADDITIONAL DATA CLEANING
deployDetails$Data_Start <- as.POSIXct(deployDetails$Data_Start, format = "%m/%d/%Y %H:%M:%S", tz = 'UTC')
deployDetails$Data_End <- as.POSIXct(deployDetails$Data_End, format = "%m/%d/%Y %H:%M:%S", tz = 'UTC')
deployDetails$Deployment_Date <- as.POSIXct(deployDetails$Deployment_Date, format = "%m/%d/%Y %H:%M", tz = 'UTC')
deployDetails$Recovery_Date <- as.POSIXct(deployDetails$Recovery_Date, format = "%m/%d/%Y %H:%M", tz = 'UTC')
deployDetails$Quality_Category <- str_to_title(deployDetails$Quality_Category)
# convert numeric data to characters
deployDetails <- deployDetails %>%
mutate(across(where(is.numeric), as.character))
# Import Passive Packer data table
db <- dbConnect(SQLite(), "PassivePacker_v.4.0.3-win64/database/packageData.sqlite")
ppdt <- dbReadTable(db, "DEPLOYMENT_DATA")
dbDisconnect(db)
## Prepare data to append to Passive Packer table
### Subset data
dd <- subset(deployDetails, select = c('Project', 'DeploymentID', 'Cruise'))
### Add required columns
dd <- dd %>%
add_column(ID = NA, SITE_CRUISE = NA, PACKAGE_ID = NA, SOURCE_PATH = NA,
DESTINATION_PATH = NA, METADATA_AUTHOR = 'Kourtney Burger',
META_AUTHOR_UUID = NA, PUBLICATION_DATE = NA, PLATFORM = NA,
INSTRUMENT_TYPE = NA, INSTRUMENT_ID = NA, DEPLOYMENT_ALIAS = NA,
SITE_ALIAS = NA, DEPLOY_TIME = NA, AUDIO_START_TIME = NA,
RECOVER_TIME =NA, AUDIO_END_TIME = NA, TITLE = "California Current Ecosystems Survey - Passive Acoustics Survey",
PURPOSE = "From Report", ABSTRACT = "From Report", DATA_COMMENT = NA,
TEMP_PATH = NA, BIO_PATH = NA, OTHER_PATH = NA, DOCS_PATH = "Y:/1651_CCES_2018/Report",
CALIBRATION_PATH = NA, CREATION_TIME = NA, UPDATE_TIME = NA,
USE = 'Y', SAMPLING_DETAILS = NA, QUALITY_DETAILS = NA,
SCIENTISTS = NA, SPONSERS = NA, FUNDERS = NA, SENSORS = NA,
DEPLOYMENT_DETAILS = NA, CALIBRATION_INFO = NA, DATASET_INFO = NA,
ANCILLARY_INFO = NA)
### Reorder and rename columns
dd <- dd[, c(4,1,2,5,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,
26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42)]
colnames(dd) <- c('ID','PROJECT','DEPLOYMENT_ID','SITE_CRUISE','SITE_OR_CRUISE',
'PACKAGE_ID','SOURCE_PATH','DESTINATION_PATH','METADATA_AUTHOR',
'META_AUTHOR_UUID','PUBLICATION_DATE','PLATFORM',
'INSTRUMENT_TYPE', 'INSTRUMENT_ID','DEPLOYMENT_ALIAS',
'SITE_ALIAS','DEPLOY_TIME', 'AUDIO_START_TIME','RECOVER_TIME',
'AUDIO_END_TIME','TITLE','PURPOSE','ABSTRACT','DATA_COMMENT',
'TEMP_PATH','BIO_PATH','OTHER_PATH','DOCS_PATH',
'CALIBRATION_PATH','CREATION_TIME','UPDATE_TIME','USE',
'SAMPLING_DETAILS','QUALITY_DETAILS','SCIENTISTS','SPONSORS',
'FUNDERS','SENSORS','DEPLOYMENT_DETAILS','CALIBRATION_INFO',
'DATASET_INFO','ANCILLARY_INFO')
### Add ID Number (Primary Key)
# If no existing data, maxID is 0
oldMax <- ifelse(nrow(ppdt) == 0, 0, max(ppdt$ID))
dd$ID <- (1:nrow(dd)) + oldMax
### Fix project and package_id fields
#(combine columns and remove spaces)
dd$PROJECT <- paste('SWFSC-',dd$PROJECT)
dd$PACKAGE_ID <- paste(dd$PROJECT,'_',dd$DEPLOYMENT_ID)
dd$PROJECT <- paste('["',dd$PROJECT,'"]')
dd$PROJECT <- gsub(" ","",dd$PROJECT)
dd$PACKAGE_ID <- gsub(" ","",dd$PACKAGE_ID)
# Add site alias
for (i in 1:nrow(deployDetails)) {
dd$SITE_ALIAS[i] <- deployDetails$Site[i]
}
### Dataset Description
dd$PURPOSE <- 'The 2018 California Current Ecosystem Survey (CCES) was a multidisciplinary survey of the marine ecosystem from southern British Columbia, Canada to northern Baja California, Mexico. This survey was a collaboration between the Southwest Fisheries Science Center’s (SWFSC) Fishery Resource Division (FRD) and Marine Mammal and Turtle Division (MMTD). The survey included oceanographic measurements, use of multi-frequency echosounders, surface trawls, vertically and obliquely integrating net tows, continuous underway fish egg sampling, visual line-transect surveys for marine mammals, photographic capture-recapture studies of marine mammals, strip transect surveys for seabirds, and passive acoustic surveys of marine mammals using Drifting Acoustic Spar Buoy Recorders (DASBRs). The recordings collected in this project have been analyzed to detect echolocation signals from beaked whales, sperm whales, and dwarf and pygmy sperm whales.'
dd$ABSTRACT <- 'The data from this deployment was collected using Drifting Acoustic Spar Buoy Recorders (DASBRs). DASBRs are free floating instruments with two hydrophones, in a vertical array, and a digital recorder. CCES 2018 was the second survey conducted under the Pacific Marine Assessment Program for Protected Species (PacMAPPS), supported by the National Oceanographic and Atmospheric Administration (NOAA), the US Navy, and the Bureau of Ocean Energy Management (BOEM). This study conducts annual cetacean and ecosystem surveys throughout the North Pacific and generates data products used by all three agencies to meet regulatory requirements pertaining to protected species.'
### Set package destination (change once hard drive is ready)
dd$DESTINATION_PATH <- 'F:/Packaged Drifts'
for(i in 1:nrow(dd)) {
#  for (i in 1) {
newDdList <- list(
'DEPLOY_TYPE' = 'Mobile Marine',
'SEA_AREA' = 'North Pacific Ocean',
'DEPLOY_SHIP' = deployDetails$Deploy_Vessel[i],
'FILES' = paste('F:/CCES_RawData/manipulated/gps/',deployDetails$Data_ID[i],'/',deployDetails$Data_ID[i],'_GPS.csv',',','F:/CCES_RawData/manipulated/gps/',deployDetails$Data_ID[i],'/',deployDetails$Data_ID[i],'_DeploymentDepth.csv',sep = ""),
'POSITION_DETAILS' = 'Satellite gps'
)
dd$DEPLOYMENT_DETAILS[i] <- toJSON(newDdList)
}
# Comment once working
# Copy text from database
# ddText <- '{"DEPLOY_TYPE": "Mobile Marine", "SEA_AREA": "North Pacific Ocean", "DEPLOY_SHIP": "R/V Ruben Lasker", "FILES": "F:/CCES_RawData/manipulated/gps/CCES_004/CCES_004_GPS.csv", "POSITION_DETAILS": "Satellite gps"}'
# ddList <- fromJSON(ddText)
# cat(toJSON(newDdList))
# cat(toJSON(ddList))
# #view(newDdList)
# #View(ddList)
# identical(newDdList,ddList)
con <- dbConnect(SQLite(), "PassivePacker_v.4.0.3-win64/database/packageData.sqlite")
dbAppendTable(con, 'DEPLOYMENT_DATA', dd)
dbDisconnect(con)
paste('G:/ADRIFT_RawData/manipulated/gps/',deployDetails$Data_ID[i],"/",deployDetails$Data_ID[i],'_GPS.csv',',','G:/ADRIFT_RawData/manipulated/gps/',deployDetails$Data_ID[i],'/',deployDetails$Data_ID[i],'_DeploymentDepth.csv', sep = "")
library(here)
library(DBI)
library(RSQLite)
library(tidyverse)
library(rjson)
library(dplyr)
library(stringr)
DepDir <- here('ADRIFT-Deployment-PassivePacker')
posixToText <- function(x) {
format(x, '%Y-%m-%dT%H:%M:%S')
}
#TEST
#posixToText(as.POSIXct("2018-11-22 08:28:24", tz='UTC'))
deployDetails <- read.csv(here("DeploymentDetailsFiles","ADRIFT_DeploymentDetails.csv"))
# Subset to remove non ADRIFT deployments (do not need to run if only packaging ADRIFT deployments)
deployDetails <- subset(deployDetails, Project == "ADRIFT")
# Subset to remove planned, incomplete, and lost drifts
names(deployDetails)[10] <- "Status"
deployDetails <- subset(deployDetails, Status == "Complete")
# Subset to remove unusable drifts (Check data and ensure it cannot be used for ANYTHING, some 'bad' data could be used for high frequency)
deployDetails <- subset(deployDetails, Quality_Category != "Unusable")
# Change soundtrap names
deployDetails[deployDetails == "ST640"] <- "SoundTrap 640"
deployDetails[deployDetails == "ST4300HF"] <- "SoundTrap 4300 High Frequency"
deployDetails[deployDetails == "ST300"] <- "SoundTrap 300"
deployDetails[deployDetails == "ST4300STD"] <- "SoundTrap 4300"
deployDetails[deployDetails == "ST500HF"] <- "SoundTrap 500 High Frequency"
deployDetails[deployDetails == "ST300HF"] <- "SoundTrap 300 High Frequency"
# Change Site Names
deployDetails[deployDetails == "WAS"] <- "Washington"
deployDetails[deployDetails == "COL"] <- "Columbia River"
deployDetails[deployDetails == "ORE"] <- "Oregon"
deployDetails[deployDetails == "HUM"] <- "Humboldt"
deployDetails[deployDetails == "MND"] <- "Mendocino"
deployDetails[deployDetails == "PTA"] <- "Point Arena"
deployDetails[deployDetails == "SFB"] <- "San Francisco Bay"
deployDetails[deployDetails == "HMB"] <- "Half Moon Bay"
deployDetails[deployDetails == "MBY"] <- "Monterey Bay"
deployDetails[deployDetails == "MOB"] <- "Morro Bay"
deployDetails[deployDetails == "CHI"] <- "Channel Islands"
deployDetails[deployDetails == "LAB"] <- "Los Angeles Basin"
deployDetails[deployDetails == "SND"] <- "San Diego"
deployDetails[deployDetails == "BCN"] <- "Baja California Norte"
deployDetails[deployDetails == "BCS"] <- "Baja California Sur"
# Fix date formats
# `format =` argument -> format needs to match the way the data is currently stored (should be %m/%d/%Y %H:%M:%S)
names(deployDetails)[37] <- "Data_Start"
names(deployDetails)[38] <- "Data_End"
deployDetails$Data_Start <- as.POSIXct(deployDetails$Data_Start, format = "%m/%d/%Y %H:%M:%S", tz = 'UTC')
deployDetails$Data_End <- as.POSIXct(deployDetails$Data_End, format = "%m/%d/%Y %H:%M:%S", tz = 'UTC')
deployDetails$Deployment_Date_UTC <- as.POSIXct(deployDetails$Deployment_Date_UTC, format = "%m/%d/%Y %H:%M", tz = 'UTC')
deployDetails$Recovery_Date_UTC <- as.POSIXct(deployDetails$Recovery_Date_UTC, format = "%m/%d/%Y %H:%M", tz = 'UTC')
deployDetails$Date..UTC <- as.Date(deployDetails$Date..UTC, "%m/%d/%Y")
#Create chief sci column
deployDetails <- deployDetails %>%
separate(Personnel, c("ChiefSci", "AdditionalPersonnel"), sep = ",", extra = "merge")
# Reorder drifts
deployDetails <- deployDetails %>% arrange(DeploymentID)
# Make all data characters
deployDetails <- deployDetails %>%
mutate(across(where(is.numeric), as.character))
db <- dbConnect(SQLite(), here("PassivePacker_v.4.0.3-win64", "database", "packageData.sqlite"))
ppdt <- dbReadTable(db, "DEPLOYMENT_DATA")
dbDisconnect(db)
# Subset data
dd <- subset(deployDetails, select = c('Project', 'DeploymentID', 'Cruise'))
# Add required columns
# Change METADATA_AUTHOR and METADATA_AUTHOR_UUID to whoever is packaging data
# Change TITLE to full project name
dd <- dd %>%
add_column(ID = NA, SITE_CRUISE = NA, PACKAGE_ID = NA, SOURCE_PATH = NA,
DESTINATION_PATH = NA, METADATA_AUTHOR = 'Kourtney Burger',
META_AUTHOR_UUID = '2a603700-144e-442c-bbb5-27c40363819a',
PUBLICATION_DATE = NA, PLATFORM = NA, INSTRUMENT_TYPE = NA,
INSTRUMENT_ID = NA, DEPLOYMENT_ALIAS = NA, SITE_ALIAS = NA,
DEPLOY_TIME = NA, AUDIO_START_TIME = NA, RECOVER_TIME =NA,
AUDIO_END_TIME = NA, TITLE = "ADRIFT In the California Current",
PURPOSE = NA, ABSTRACT = NA, DATA_COMMENT = NA, TEMP_PATH = NA,
BIO_PATH = NA, OTHER_PATH = NA, DOCS_PATH = NA, CALIBRATION_PATH = NA,
CREATION_TIME = NA, UPDATE_TIME = NA, USE = 'Y', SAMPLING_DETAILS = NA,
QUALITY_DETAILS = NA, SCIENTISTS = NA, SPONSORS = NA, FUNDERS = NA,
SENSORS = NA, DEPLOYMENT_DETAILS = NA, CALIBRATION_INFO = NA,
DATASET_INFO = NA, ANCILLARY_INFO = NA)
# Reorder and rename columns
dd <- dd[, c(4,1,2,5,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,
26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42)]
names(dd)[2] <- "PROJECT"
names(dd)[3] <- "DEPLOYMENT_ID"
names(dd)[5] <- "SITE_OR_CRUISE"
# Add ID Number (Primary Key)
# If no existing data, maxID is 0
oldMax <- ifelse(nrow(ppdt) == 0, 0, max(ppdt$ID))
dd$ID <- (1:nrow(dd)) + oldMax
# Fix project and package_id fields
#(combine columns and remove spaces)
dd$PROJECT <- paste('SWFSC-',dd$PROJECT)
dd$PACKAGE_ID <- paste(dd$PROJECT,'_',dd$DEPLOYMENT_ID)
dd$PROJECT <- paste('["',dd$PROJECT,'"]')
dd$PROJECT <- gsub(" ","",dd$PROJECT)
dd$PACKAGE_ID <- gsub(" ","",dd$PACKAGE_ID)
# Add Publication Date
for (i in 1:nrow(deployDetails)) {
deployDate <- deployDetails$Date..UTC[i]
pubDate <- deployDate %m+% years(2)
pubDate <- as.character(pubDate)
dd$PUBLICATION_DATE[i] <- pubDate
}
# Add site alias
for (i in 1:nrow(deployDetails)) {
dd$SITE_ALIAS[i] <- deployDetails$Site[i]
}
# Dataset Description
dd$PURPOSE <- 'ADRIFT in the California Current uses passive acoustic drifting buoys to study ocean sound in the California Current Ecosystem. The relatively low-cost buoys can be deployed and recovered from most vessels, including: research, fishing, and tourist boats. They drift autonomously and can be monitored shoreside via a satellite messenger. Data collected through the ADRIFT project will be used to assess noise levels and seasonal marine mammal acoustic presence in the California Current.'
dd$ABSTRACT <- ''
# Set package destination (change to appropriate file path)
dd$DESTINATION_PATH <- 'G:/Packaged Drifts'
for(i in 1:nrow(dd)) {
#  for (i in 64) {
newDdList <- list(
'DEPLOY_TYPE' = 'Mobile Marine',
'SEA_AREA' = 'North Pacific Ocean',
'DEPLOY_SHIP' = deployDetails$Deploy.Vessel[i],
'FILES' = paste('G:/ADRIFT_RawData/manipulated/gps/',deployDetails$Data_ID[i],"/",deployDetails$Data_ID[i],'_GPS.csv',',','G:/ADRIFT_RawData/manipulated/gps/',deployDetails$Data_ID[i],'/',deployDetails$Data_ID[i],'_DeploymentDepth.csv', sep = ""),
'POSITION_DETAILS' = ''
)
dd$DEPLOYMENT_DETAILS[i] <- toJSON(newDdList)
}
# Comment once working
# Copy text from database
# ddText <- '{"DEPLOY_TYPE": "Mobile Marine", "SEA_AREA": "North Pacific Ocean", "DEPLOY_SHIP": "Scrimshaw", "FILES": "G:/ADRIFT_RawData/manipulated/gps/ADRIFT_097/ADRIFT_097_GPS.csv", "POSITION_DETAILS": ""}'
# ddList <- fromJSON(ddText)
# cat(toJSON(newDdList))
# cat(toJSON(ddList))
# view(newDdList)
# View(ddList)
# identical(newDdList,ddList)
con <- dbConnect(SQLite(), here("PassivePacker_v.4.0.3-win64", "database", "packageData.sqlite"))
dbAppendTable(con, 'DEPLOYMENT_DATA', dd)
dbDisconnect(con)

newCalList <- list(
'CAL_STATE' = 'Factory Calibrated',
'CAL_DOCS_PATH' = paste("G:/ADRIFT_RawData/cal files"),
'SENSITIVITY' = '',
'FREQUENCY' = '',
'GAIN' = '',
'COMMENT' = 'This dataset is composed of multichannel recorders with different types of hydrophones, each with its own unique sensitivity and frequency range. For the detailed calibration information refer to the ADRIFT_CalibrationInfo.csv spreadsheet.'
)
dd$CALIBRATION_INFO[i] <- toJSON(newCalList)
}
# comment once working
# Copy text from database
# calText <- '{"CAL_STATE": "Factory Calibrated", "CAL_DOCS_PATH": "G:/ADRIFT_RawData/cal files", "SENSITIVITY": "", "FREQUENCY": "", "GAIN": "", "COMMENT": "This dataset is composed of multichannel recorders with different types of hydrophones, each with its own unique sensitivity and frequency range. For the detailed calibration information refer to the ADRIFT_CalibrationInfo.csv spreadsheet."}'
# calList <- fromJSON(calText)
# cat(toJSON(newCalList))
# cat(toJSON(calList))
# view(newCalList)
# View(calList)
# identical(newCalList,calList)
for(i in 1:nrow(dd)) {
#  for (i in 64) {
newDiList <- list(
'TYPE' = 'Raw',
'SUB_TYPE' = 'Audio',
'PLATFORM' = 'Drifter',
'INSTRUMENT_TYPE' = deployDetails$Type[i],
'INSTRUMENT_ID' = deployDetails$Instrument_ID[i],
'DEPLOYMENT_TIME' = posixToText(deployDetails$Deployment_Date[i]),
'RECOVERY_TIME' = posixToText(deployDetails$Recovery_Date[i]),
'AUDIO_START' = posixToText(deployDetails$Data_Start[i]),
'AUDIO_END' = posixToText(deployDetails$Data_End[i]),
'SOURCE_PATH' =  paste('G:/ADRIFT_RawData/manipulated/audio/',deployDetails$Data_ID[i], sep = ""),
'DATA_COMMENT' = deployDetails$Notes[i]
)
dd$DATASET_INFO[i] <- toJSON(newDiList)
}
# comment once working
# Copy text from database
# diText <- '{"TYPE":"Raw","SUB_TYPE":"Audio","PLATFORM":"Drifter","INSTRUMENT_TYPE":"SoundTrap 4300 High Frequency","INSTRUMENT_ID":"5992","DEPLOYMENT_TIME":"2023-10-05T23:16:00","RECOVERY_TIME":"2023-10-06T23:24:00","AUDIO_START":"2023-10-05T23:29:58","AUDIO_END":"2023-10-06T23:23:58","SOURCE_PATH":"G:/ADRIFT_RawData/manipulated/audio/ADRIFT_097","DATA_COMMENT":""}'
# diList <- fromJSON(diText)
# cat(toJSON(newDiList))
# cat(toJSON(diList))
# view(newDiList)
# View(diList) #comment once running full loop
# identical(newDiList,diList)
for(i in 1:nrow(dd)) {
#  for (i in 64) {
newAncilList <- list(
'BIO_PATH' = "",
'OTHER_PATH' = paste('G:/ADRIFT_RawData/manipulated/metadata/', deployDetails$Data_ID[i], sep = ""),
'TEMP_PATH' = paste('G:/ADRIFT_RawData/manipulated/temp/', deployDetails$Data_ID[i], sep = "")
)
dd$ANCILLARY_INFO[i] <- toJSON(newAncilList)
}
# comment once working
# ancilText <- '{"BIO_PATH": "", "OTHER_PATH": "G:/ADRIFT_RawData/manipulated/metadata/ADRIFT_097", "TEMP_PATH": "G:/ADRIFT_RawData/manipulated/temp/ADRIFT_097"}'
# ancilList <- fromJSON(ancilText)
# cat(toJSON(newAncilList))
# cat(toJSON(ancilList))
# #view(newAncilList)
# #View(ancilList) #comment once running full loop
# identical(newAncilList,ancilList)
dd$DEPLOYMENT_DETAILS[90]
dd$SAMPLING_DETAILS[90]
con <- dbConnect(SQLite(), here("PassivePacker_v.4.0.3-win64", "database", "packageData.sqlite"))
dbAppendTable(con, 'DEPLOYMENT_DATA', dd)
dbDisconnect(con)
library(here)
library(DBI)
library(RSQLite)
library(tidyverse)
library(rjson)
library(dplyr)
library(stringr)
DepDir <- here('ADRIFT-Deployment-PassivePacker/Soundscape Metrics')
posixToText <- function(x) {
format(x, '%Y-%m-%dT%H:%M:%S')
}
#TEST
#posixToText(as.POSIXct("2018-11-22 08:28:24", tz='UTC'))
deployDetails <- read.csv(here("DeploymentDetailsFiles","ADRIFT_DeploymentDetails.csv"))
View(deployDetails)
# Subset to remove non ADRIFT deployments (do not need to run if only packaging ADRIFT deployments)
deployDetails <- subset(deployDetails, Project == "ADRIFT")
# Subset to remove planned, incomplete, and lost drifts
names(deployDetails)[10] <- "Status"
deployDetails <- subset(deployDetails, Status == "Complete")
# Subset to remove unusable drifts (Check data and ensure it cannot be used for ANYTHING, some 'bad' data could be used for high frequency)
deployDetails <- subset(deployDetails, Quality_Category != "Unusable")
View(deployDetails)
library(here)
library(DBI)
library(RSQLite)
library(tidyverse)
library(rjson)
library(dplyr)
library(stringr)
DepDir <- here('ADRIFT-Deployment-PassivePacker/Soundscape Metrics')
posixToText <- function(x) {
format(x, '%Y-%m-%dT%H:%M:%S')
}
#TEST
#posixToText(as.POSIXct("2018-11-22 08:28:24", tz='UTC'))
deployDetails <- read.csv(here("DeploymentDetailsFiles","ADRIFT_DeploymentDetails.csv"))
# Subset to remove non ADRIFT deployments (do not need to run if only packaging ADRIFT deployments)
deployDetails <- subset(deployDetails, Project == "ADRIFT")
# Subset to remove planned, incomplete, and lost drifts
names(deployDetails)[10] <- "Status"
deployDetails <- subset(deployDetails, Status == "Complete")
# Subset to remove unusable drifts (Check data and ensure it cannot be used for ANYTHING, some 'bad' data could be used for high frequency)
deployDetails <- subset(deployDetails, Quality_Category != "Unusable")
# Subset any drifts that used SM2 or SM3 recorders
deployDetails <- subset(deployDetails, Type != c('SM2Bat','SM3M'))
# Remove any additional drifts that did not have sound level metrics calculated
# deployDetails <- deployDetails[-c(), ]
# Change soundtrap names
deployDetails[deployDetails == "ST640"] <- "SoundTrap 640"
deployDetails[deployDetails == "ST4300HF"] <- "SoundTrap 4300 High Frequency"
deployDetails[deployDetails == "ST300"] <- "SoundTrap 300"
deployDetails[deployDetails == "ST4300STD"] <- "SoundTrap 4300"
deployDetails[deployDetails == "ST500HF"] <- "SoundTrap 500 High Frequency"
deployDetails[deployDetails == "ST300HF"] <- "SoundTrap 300 High Frequency"
# Change Site Names
deployDetails[deployDetails == "WAS"] <- "Washington"
deployDetails[deployDetails == "COL"] <- "Columbia River"
deployDetails[deployDetails == "ORE"] <- "Oregon"
deployDetails[deployDetails == "HUM"] <- "Humboldt"
deployDetails[deployDetails == "MND"] <- "Mendocino"
deployDetails[deployDetails == "PTA"] <- "Point Arena"
deployDetails[deployDetails == "SFB"] <- "San Francisco Bay"
deployDetails[deployDetails == "HMB"] <- "Half Moon Bay"
deployDetails[deployDetails == "MBY"] <- "Monterey Bay"
deployDetails[deployDetails == "MOB"] <- "Morro Bay"
deployDetails[deployDetails == "CHI"] <- "Channel Islands"
deployDetails[deployDetails == "LAB"] <- "Los Angeles Basin"
deployDetails[deployDetails == "SND"] <- "San Diego"
deployDetails[deployDetails == "BCN"] <- "Baja California Norte"
deployDetails[deployDetails == "BCS"] <- "Baja California Sur"
# Fix date formats
# `format =` argument -> format needs to match the way the data is currently stored (should be %m/%d/%Y %H:%M:%S)
names(deployDetails)[37] <- "Data_Start"
names(deployDetails)[38] <- "Data_End"
deployDetails$Data_Start <- as.POSIXct(deployDetails$Data_Start, format = "%m/%d/%Y %H:%M:%S", tz = 'UTC')
deployDetails$Data_End <- as.POSIXct(deployDetails$Data_End, format = "%m/%d/%Y %H:%M:%S", tz = 'UTC')
deployDetails$Deployment_Date_UTC <- as.POSIXct(deployDetails$Deployment_Date_UTC, format = "%m/%d/%Y %H:%M", tz = 'UTC')
deployDetails$Recovery_Date_UTC <- as.POSIXct(deployDetails$Recovery_Date_UTC, format = "%m/%d/%Y %H:%M", tz = 'UTC')
deployDetails$Date..UTC <- as.Date(deployDetails$Date..UTC, "%m/%d/%Y")
# Reorder drifts
deployDetails <- deployDetails %>% arrange(DeploymentID)
# Make all data characters
deployDetails <- deployDetails %>%
mutate(across(where(is.numeric), as.character))
db <- dbConnect(SQLite(), here("PassivePacker_v.4.0.3-win64", "database", "packageData.sqlite"))
ppdt <- dbReadTable(db, "DEPLOYMENT_DATA")
dbDisconnect(db)
View(dd)
View(dd)
i=90
newQdList <- list(
'analyst' = deployDetails$Quality_Analyst[i],
'analyst_uuid' = '',
'quality_details' = list(
list(
'quality' = 'Good',
'low_freq' = deployDetails$Quality_LowFreq[i],
'high_freq' = deployDetails$Quality_HighFreq[i],
'start' = posixToText(deployDetails$Data_Start[i]),
'end' = posixToText(deployDetails$Data_End[i]),
'comments' = paste('Refer to ', deployDetails$Data_ID[i], '_500Hz_LF_Noise_Log.xls' , ' for detailed noise logs.', sep = ""),
'channels' = list(
1)
)
),
'method' = '',
'objectives' = '',
'abstract' = ''
)
# save newQdList to r list
dd$QUALITY_DETAILS[i] <- toJSON(newQdList)
dd$QUALITY_DETAILS[i]
cat(toJSON(newQdList))
# cat(toJSON(qdList))
view(newQdList)
posixToText(2010-01-01T13:00:00)
driftID <- read.csv("~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files/SoundLevelMetrics_CalibrationInfo.csv")
View(driftID)
dir.create(file.path('G:/Soundscape Metrics/Data/manipulated'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/OL Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/PSD Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/TOL Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Logs'))
paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = "")
View(driftID)
i=3
currentLogs <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "\\.txt$", full.names = T)
currentLogs <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "\\.txt$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Logs/',driftID$DeploymentID[i], sep = "")))
newLogs <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Logs/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentLogs, newLogs)
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentLogs <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "\\.txt$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Logs/',driftID$DeploymentID[i], sep = "")))
newLogs <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Logs/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentLogs, newLogs)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "\\BB$", full.names = T)
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "(BB)+(.csv)", full.names = T)
paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""
paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = "")
paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = "")
i=3
paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = "")
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "(BB)+(.csv)", full.names = T)
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "BB.*\\.csv$)", full.names = T)
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), full.names = T)
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "BB.*\\.csv$", full.names = T)
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "BB.*\\.csv$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics/',driftID$DeploymentID[i], sep = "")))
newBBMetrics <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentBBMetrics, newBBMetrics)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
driftID <- read.csv("~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files/SoundLevelMetrics_CalibrationInfo.csv")
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/OL Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/PSD Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/TOL Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Logs'))
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentLogs <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "\\.txt$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Logs/',driftID$DeploymentID[i], sep = "")))
newLogs <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Logs/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentLogs, newLogs)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "BB.*\\.csv$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics/',driftID$DeploymentID[i], sep = "")))
newBBMetrics <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentBBMetrics, newBBMetrics)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
View(driftID)
close(pb) # Close the connection
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentPSDMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "BB.*\\.csv$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/PSD Metrics/',driftID$DeploymentID[i], sep = "")))
newPSDMetrics <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/PSD Metrics/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentPSDMetrics, newPSDMetrics)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentOLMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "BB.*\\.csv$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/OL Metrics/',driftID$DeploymentID[i], sep = "")))
newOLMetrics <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/OL Metrics/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentOLMetrics, newOLMetrics)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Metrics/OL Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Metrics/PSD Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Metrics/TOL Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Logs'))
dir.create(file.path('F:/Soundscape Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Metrics/OL Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Metrics/PSD Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Metrics/TOL Metrics'))
dir.create(file.path('F:/Soundscape Metrics/Data/Manipulated/Logs'))
dir.create(file.path('F:/Soundscape Metrics/Data/Packaged Data'))
dir.create(file.path('D:/Soundscape Metrics'))
dir.create(file.path('D:/Soundscape Metrics/Data'))
dir.create(file.path('D:/Soundscape Metrics/Data/Packaged Data'))
dir.create(file.path('D:/Soundscape Metrics/Data/Manipulated'))
dir.create(file.path('D:/Soundscape Metrics/Data/Manipulated/Metrics'))
dir.create(file.path('D:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics'))
dir.create(file.path('D:/Soundscape Metrics/Data/Manipulated/Metrics/OL Metrics'))
dir.create(file.path('D:/Soundscape Metrics/Data/Manipulated/Metrics/PSD Metrics'))
dir.create(file.path('D:/Soundscape Metrics/Data/Manipulated/Metrics/TOL Metrics'))
dir.create(file.path('D:/Soundscape Metrics/Data/Manipulated/Logs'))
driftID <- read.csv("~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files/SoundLevelMetrics_CalibrationInfo.csv")
# Subset nby project
driftID <- subset(driftID, Project == "ADRIFT")
View(driftID)
driftID <- read.csv("~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files/SoundLevelMetrics_CalibrationInfo.csv")
# Subset nby project
driftID <- subset(driftID, Project == "ADRIFT")
View(driftID)
dir.create(file.path('G:/Soundscape Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data'))
dir.create(file.path('G:/Soundscape Metrics/Data/Packaged Data'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/OL Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/PSD Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Metrics/TOL Metrics'))
dir.create(file.path('G:/Soundscape Metrics/Data/Manipulated/Logs'))
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentLogs <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "\\.txt$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Logs/',driftID$DeploymentID[i], sep = "")))
newLogs <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Logs/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentLogs, newLogs)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "BB.*\\.csv$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics/',driftID$DeploymentID[i], sep = "")))
newBBMetrics <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentBBMetrics, newBBMetrics)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "BB.*\\.csv$", full.names = T)
View(calInfo)
driftID <- read.csv("~/GitHub/ADRIFT-Deployment-PassivePacker/Calibration Files/SoundLevelMetrics_CalibrationInfo.csv")
# Subset nby project
driftID <- subset(driftID, Project == "ADRIFT")
View(driftID)
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "BB.*\\.csv$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics/',driftID$DeploymentID[i], sep = "")))
newBBMetrics <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentBBMetrics, newBBMetrics)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""
d
paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = "")
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentBBMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "BB.*\\.csv$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics/',driftID$DeploymentID[i], sep = "")))
newBBMetrics <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/BB Metrics/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentBBMetrics, newBBMetrics)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentPSDMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "PSD.*\\.csv$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/PSD Metrics/',driftID$DeploymentID[i], sep = "")))
newPSDMetrics <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/PSD Metrics/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentPSDMetrics, newPSDMetrics)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentOLMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "OL.*\\.csv$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/OL Metrics/',driftID$DeploymentID[i], sep = "")))
newOLMetrics <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/OL Metrics/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentOLMetrics, newOLMetrics)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
# Set up progress bar
pb <- txtProgressBar(min = 0,
max = nrow(driftID),
style = 3,
width = 50,
char = "=")
for (i in 1:nrow(driftID)) {
# List of files I want to move
currentTOLMetrics <- list.files(paste('G:/Soundscape Metrics/Data/RAW from DON/metrics/', driftID$DeploymentID[i], sep = ""), pattern = "TOL.*\\.csv$", full.names = T)
# Create directory to move files to
dir.create(file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/TOL Metrics/',driftID$DeploymentID[i], sep = "")))
newTOLMetrics <- file.path(paste('G:/Soundscape Metrics/Data/Manipulated/Metrics/TOL Metrics/',driftID$DeploymentID[i], sep = ""))
# Copy list of files to new directory
file.copy(currentTOLMetrics, newTOLMetrics)
# Sets the progress bar to the current state
setTxtProgressBar(pb, i)
}
close(pb) # Close the connection
